from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from app.generators import gpt4
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

router = Router()

class Generate(StatesGroup):
    text = State()

@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! \n'
        f'–Ø –°–µ—Ä–∞—Ñ–∏–Ω–∞, —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –∏–∑—É—á–µ–Ω–∏—é –∫—É—Ä—Å–∞ –ò–ò. \n'
        f'–í –±–æ—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω API OpenAI. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å!\n\n'
        f'üéì –ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n'
        f'- [–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ –ò–ò](https://an1.h5p.com/content/1292451115818241327/embed)\n'
        f'- [–¢–µ—Å—Ç –ø–æ –∫—É—Ä—Å—É –ò–ò](https://an1.h5p.com/content/1292455030239160407/embed)',
        parse_mode="Markdown"
    )
    await state.clear()

@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer(
        "üõ† –ö–æ–º–∞–Ω–¥—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥.\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏.\n\n"
        "üìö –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
        "1. –ù–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –¥–∞—Ç—å –≤–∞–º —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç.\n"
        "2. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–º–µ –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò, –ø—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å.\n\n"
        "üí° –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:\n"
        "- \"–û–±—ä—è—Å–Ω–∏, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å.\"\n"
        "- \"–ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ Python.\"\n"
        "- \"–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–ª–≥–æ—Ä–∏—Ç–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Å–ø—É—Å–∫–∞?\"\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å! üòä"
    )

@router.message(Generate.text)
async def generate_error(message: Message):
    await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É...')

@router.message(F.text)
async def generate(message: Message, state: FSMContext):
    await state.set_state(Generate.text)
    response = await gpt4(message.text)
    await message.answer(response.choices[0].message.content)
    await state.clear()
